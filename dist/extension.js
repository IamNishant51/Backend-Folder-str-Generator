(()=>{"use strict";var n={3:n=>{n.exports=require("path")},265:function(n,e,r){var o,s=this&&this.__createBinding||(Object.create?function(n,e,r,o){void 0===o&&(o=r);var s=Object.getOwnPropertyDescriptor(e,r);s&&!("get"in s?!e.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return e[r]}}),Object.defineProperty(n,o,s)}:function(n,e,r,o){void 0===o&&(o=r),n[o]=e[r]}),t=this&&this.__setModuleDefault||(Object.create?function(n,e){Object.defineProperty(n,"default",{enumerable:!0,value:e})}:function(n,e){n.default=e}),c=this&&this.__importStar||(o=function(n){return o=Object.getOwnPropertyNames||function(n){var e=[];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[e.length]=r);return e},o(n)},function(n){if(n&&n.__esModule)return n;var e={};if(null!=n)for(var r=o(n),c=0;c<r.length;c++)"default"!==r[c]&&s(e,n,r[c]);return t(e,n),e});Object.defineProperty(e,"__esModule",{value:!0}),e.activate=function(n){let e=i.commands.registerCommand("expressjet.createBoilerplate",async()=>{const n=i.workspace.workspaceFolders;if(!n||0===n.length)return void i.window.showErrorMessage("No folder is open in the current VS Code window.");const e=n[0].uri.fsPath,r=d.join(e,"src"),o=["src","src/config","src/controllers","src/models","src/routes","src/middlewares"];try{o.forEach(n=>a.mkdirSync(d.join(e,n),{recursive:!0})),(()=>{const n="\nconst express = require('express');\nconst dotenv = require('dotenv');\nconst connectDB = require('./config/db');\n\ndotenv.config();\n\nconst app = express();\nconst PORT = process.env.PORT || 5000;\n\napp.use(express.json());\n\napp.get('/', (req, res) => {\n  res.send('API is running...');\n});\n\nconnectDB();\n\napp.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}`);\n});\n".trim();a.writeFileSync(d.join(r,"app.js"),n);const o="\nconst mongoose = require('mongoose');\nrequire('dotenv').config();\n\nconst connectDB = async () => {\n  try {\n    await mongoose.connect(process.env.MONGO_URI);\n    console.log('MongoDB Connected');\n  } catch (err) {\n    console.error(err.message);\n    process.exit(1);\n  }\n};\n\nmodule.exports = connectDB;\n".trim();a.writeFileSync(d.join(r,"config","db.js"),o),a.writeFileSync(d.join(e,".env"),"PORT=5000\nMONGO_URI=mongodb://localhost:27017/your-db-name"),a.writeFileSync(d.join(e,".gitignore"),"node_modules/\n.env");const s="\n# Express + MongoDB Boilerplate\n\n## 🔧 Installation\n\n```bash\nnpm install express mongoose dotenv\n```\n\n## 🚀 Run the server\n\n```bash\nnode src/app.js\n# or with nodemon\nnodemon src/app.js\n```\n\n## 📁 Folder Structure\n\n- `src/config`: DB config\n- `src/controllers`: Controllers (add your logic)\n- `src/models`: Mongoose models\n- `src/routes`: API routes\n- `src/middlewares`: Middlewares\n".trim();a.writeFileSync(d.join(e,"README.md"),s);const t='\n{\n  "name": "express-backend",\n  "version": "1.0.0",\n  "main": "src/app.js",\n  "scripts": {\n    "start": "node src/app.js",\n    "dev": "nodemon src/app.js"\n  },\n  "dependencies": {\n    "dotenv": "^16.0.3",\n    "express": "^4.18.2",\n    "mongoose": "^7.6.0"\n  },\n  "devDependencies": {\n    "nodemon": "^3.0.1"\n  }\n}\n'.trim();a.writeFileSync(d.join(e,"package.json"),t)})(),i.window.showInformationMessage("✅ Express backend boilerplate generated in current folder!")}catch(n){i.window.showErrorMessage(`❌ Error creating boilerplate: ${n}`)}});n.subscriptions.push(e)},e.deactivate=function(){};const i=c(r(398)),a=c(r(383)),d=c(r(3))},383:n=>{n.exports=require("fs")},398:n=>{n.exports=require("vscode")}},e={},r=function r(o){var s=e[o];if(void 0!==s)return s.exports;var t=e[o]={exports:{}};return n[o].call(t.exports,t,t.exports,r),t.exports}(265);module.exports=r})();
//# sourceMappingURL=extension.js.map